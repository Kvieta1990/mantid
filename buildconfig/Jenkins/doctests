#!/bin/bash -ex
###############################################################################
# LINUX/MAC SCRIPT TO DRIVE THE JENKINS DOCUMENTATION TESTS OF MANTID.
#
# Notes:
#
# WORKSPACE, JOB_NAME, NODE_LABEL GIT_COMMIT are environment variables that
# are set by Jenkins. The last one corresponds to any labels set on a slave.
# MANTID_DATA_STORE should be set in the configuration of each
# slave.
###############################################################################

###############################################################################
# Print out the versions of things we are using
###############################################################################
if [ $(command -v cmake3) ]; then
    CMAKE_EXE=cmake3
else
    CMAKE_EXE=cmake
fi
$CMAKE_EXE --version

###############################################################################
# System discovery
###############################################################################
# Setup software collections on rhel7 to allow using gcc7
if [[ ${NODE_LABELS} == *rhel7* ]] || [[ ${NODE_LABELS} == *centos7* ]] || [[ ${NODE_LABELS} == *scilin7* ]]; then
    SCL_ENABLE="scl enable devtoolset-7"
else
    SCL_ENABLE="eval"
fi

#####################################################################################
# Find and install package
#####################################################################################
INSTALLER_SCRIPT=$WORKSPACE/Testing/SystemTests/scripts/mantidinstaller.py
EXE_PATH_FILE=$PWD/mantidplotpath.txt
python3 ${INSTALLER_SCRIPT} install $WORKSPACE --dump-exe-path=${EXE_PATH_FILE}
MANTIDPLOT_EXE=$(cat ${EXE_PATH_FILE})

###############################################################################
# Set up the location for the local object store outside of the build and
# source tree, which can be shared by multiple builds.
# It defaults to a MantidExternalData directory within the HOME directory.
# It can be overridden by setting the MANTID_DATA_STORE environment variable.
###############################################################################
if [ -z "$MANTID_DATA_STORE" ]; then
  export MANTID_DATA_STORE=$HOME/MantidExternalData
fi

###############################################################################
# Create the build directory if it doesn't exist
###############################################################################
BUILD_DIR=$WORKSPACE/build
[ -d $BUILD_DIR ] || mkdir $BUILD_DIR
cd $BUILD_DIR

###############################################################################
# CMake configuration. We only need a minimal configuration as we will actually
# just run from the package
###############################################################################
$SCL_ENABLE "${CMAKE_EXE} -DMANTID_DATA_STORE=${MANTID_DATA_STORE} .."

###############################################################################
# Build step
###############################################################################
${CMAKE_EXE} --build . -- StandardTestData

###############################################################################
# Add tests from the examples available on the mantidproject wiki pages
# The script produces additional RST pages derived from the examples.
# These will be run together with the standard docs-test RST pages.
#
# Only for:
#   jobs that have the suffix wikitests in their name,
#   on platforms: Ubuntu
###############################################################################
if [[ ${NODE_LABELS} == *ubuntu* ]]; then
    ON_WT_PLATFORMS=true
fi
if [[ "${ON_WT_PLATFORMS}" == true ]] && [[ ${JOB_NAME} == *wikitests* ]]; then
  python3 ${WORKSPACE}/tools/scripts/TestWikiPython.py -o ${WORKSPACE}/docs/source/mwTests
fi

#####################################################################################
# Run tests
#####################################################################################
# Remove doctrees directory so it forces a full reparse. This will then pick up all
# reference warnings in a html build
if [ -d $BUILD_DIR/docs/doctrees ]; then
  rm -rf $BUILD_DIR/docs/doctrees/*
fi
# Create clean user properties with UsageData search path
userprops=~/.mantid/Mantid.user.properties
rm -f $userprops

data_binary_root=$BUILD_DIR/ExternalData
testdata_dir=${data_binary_root}/Testing/Data
instrument_dir=${WORKSPACE}/instrument
echo "datasearch.directories=${testdata_dir}/DocTest;${testdata_dir}/UnitTest;${instrument_dir}" > $userprops
echo "UpdateInstrumentDefinitions.OnStartup = 0" >> $userprops
echo "usagereports.enabled = 0" >> $userprops

set +e #don't immediately exit on failure so that we can remove the package
${MANTIDPLOT_EXE} -xq docs/runsphinx_html.py
${MANTIDPLOT_EXE} -xq docs/runsphinx_doctest.py
status=$?
set -e #exit on failures from now on

#####################################################################################
# Remove package
#####################################################################################
python3 ${INSTALLER_SCRIPT} uninstall $WORKSPACE

exit $status
